"""update schemas

Revision ID: c5abd578a49b
Revises: 351ebc5df675
Create Date: 2025-08-18 18:00:59.199872

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c5abd578a49b'
down_revision: Union[str, Sequence[str], None] = '351ebc5df675'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('analytics_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('payload', sa.JSON(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_analytics_events_id'), 'analytics_events', ['id'], unique=False)
    op.drop_index(op.f('ix_events_device_id'), table_name='events')
    op.drop_index(op.f('ix_events_ts'), table_name='events')
    op.drop_index(op.f('ix_events_user_id'), table_name='events')
    op.drop_table('events')
    op.alter_column('devices', 'name',
               existing_type=sa.VARCHAR(length=128),
               type_=sa.String(length=200),
               nullable=False)
    op.drop_index(op.f('ix_devices_user_id'), table_name='devices')
    op.drop_constraint(op.f('uq_user_device'), 'devices', type_='unique')
    op.create_index(op.f('ix_devices_id'), 'devices', ['id'], unique=False)
    op.drop_constraint(op.f('devices_user_id_fkey'), 'devices', type_='foreignkey')
    op.create_foreign_key(None, 'devices', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('devices', 'created_at')
    op.drop_column('devices', 'device_id')
    op.add_column('users', sa.Column('username', sa.String(length=150), nullable=False))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True)
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.drop_column('users', 'email')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('users', 'username')
    op.add_column('devices', sa.Column('device_id', sa.VARCHAR(length=128), autoincrement=False, nullable=False))
    op.add_column('devices', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'devices', type_='foreignkey')
    op.create_foreign_key(op.f('devices_user_id_fkey'), 'devices', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_devices_id'), table_name='devices')
    op.create_unique_constraint(op.f('uq_user_device'), 'devices', ['user_id', 'device_id'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('ix_devices_user_id'), 'devices', ['user_id'], unique=False)
    op.alter_column('devices', 'name',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=128),
               nullable=True)
    op.create_table('events',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('device_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('ts', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], name=op.f('events_device_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('events_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('events_pkey'))
    )
    op.create_index(op.f('ix_events_user_id'), 'events', ['user_id'], unique=False)
    op.create_index(op.f('ix_events_ts'), 'events', ['ts'], unique=False)
    op.create_index(op.f('ix_events_device_id'), 'events', ['device_id'], unique=False)
    op.drop_index(op.f('ix_analytics_events_id'), table_name='analytics_events')
    op.drop_table('analytics_events')
    # ### end Alembic commands ###
